syntax = "proto3";

package kyc_verification.v1;
import "google/api/annotations.proto";


service KYCVerificationService {
  rpc VerifyPan (VerifyPanRequest) returns (VerifyPanResponse){
    option (google.api.http) = {
      post: "/kyc/verify/pan"
      body: "*"
    };
  }
  rpc VerifyRPD (RPDRequest) returns (RpdResponse){
    option (google.api.http) = {
      get: "/kyc/verify/rpd"
    };
  }
  rpc RPDWebhook (RPDWebhookRequest) returns (RPDWebhookResponse){
    option (google.api.http) = {
      post: "/kyc/verify/rpd/webhook"
      body: "*"
    };
  }
}

message VerifyPanRequest {
  string user_id = 1;
  string pan = 2;
  bool consent = 3;
  string reason = 4;
}

message VerifyPanResponse {
  string success = 1;
  string message = 2;
}

message RPDRequest {
  string user_id = 1;
}

message RpdResponse {
  string short_url = 1;
  string status = 2;
  string upi_link = 3;
}

// Represents IFSC details
message IFSCDetails {
  string address = 1;
  string branch = 2;
  string center = 3;
  string city = 4;
  string contact = 5;
  string district = 6;
  string imps = 7;
  string iso3166 = 8;
  string micr = 9;
  string name = 10;
  string neft = 11;
  string rtgs = 12;
  string state = 13;
  string swift = 14;
  string upi = 15;
}

// Represents bank account details
message BankAccountDetails {
  string bank_account_name = 1;
  string bank_account_ifsc = 2;
  string bank_account_number = 3;
  string payer_vpa = 4;
  string account_type = 5;  // BANK_ACCOUNT, UNKNOWN, or PPI
  optional string bank_account_type = 6; // SAVINGS, optional
  bool ifsc_cross_check = 7;
  IFSCDetails ifsc_details = 8;
}


// Represents RPD data
message RPDData {
  bool success = 1;
  string id = 2;  // RPD request ID
  string upi_bill_id = 3;
  BankAccountDetails data = 4;
  map<string, string> additional_data = 5;
}

message RPDBody {
  RPDData rpd = 1;
}
// Represents the complete response payload
message RPDWebhookRequest {
  string event = 1;
  string timestamp = 2;
  RPDBody data = 3;
  string trace_id = 4;
}

message RPDWebhookResponse{}

